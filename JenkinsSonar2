def artifactname = "devops-snow-build-app.jar"
def repoName = "JenkinsDevOpsProject"
def pipelineName = "SunilPipelines/Sunil-Scripted-Pipeline-Sonar"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   environment {
	 SCANNER_HOME = tool 'sonarScanner'
	}  
  stages {
       stage('Build !@') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'
	      snDevOpsChange(ignoreErrors:false)

           }
       }
       stage('Test') {
           steps {
              sonarSummaries()
              sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
      stage('Deploy Stage') {
                 steps {
                    
                    echo 'Deploying the change....'
		    snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           	    snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
		  //  snDevOpsChange changeRequestDetails: '{ "attributes": { "type": "Emergency", "standard_change_template": "62d10fa1c303101035ae3f52c1d3aec1"}}'
		     // snDevOpsChange changeCreationTimeOut: 3600, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 18000, pollingInterval: 30
                     // sonarSummaries()
                   // snDevOpsSecurityResult securityResultAttributes: "{'scanner': 'Veracode','applicationName': 'PetStoreAPI-Github', 'securityToolId' : '270f932193e4b5101fb93cb19dba1005'}"
                     snDevOpsChange changeRequestDetails: '{ "attributes": {"chg_model": "adffaa9e4370211072b7f6be5bb8f2ed"}}'
		     changeRequestNumber = snDevOpsGetChangeNumber(changeDetails: """{"build_number":"${env.BUILD_NUMBER}"}""")
		     echo "${changeRequestNumber}"
		     snDevOpsUpdateChangeInfo(changeRequestDetails: """{"close_code": "successful", "state": "3", "close_notes": "Deployment to PROD was successful test 123", "short_description": "Test description in Get_Change Step by", "priority": "1", "justification": "test justification", "description": "test description",  "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "Update of change request through Update API"}""", changeRequestNumber: """${changeRequestNumber}""")
                  
                  }
                  
                  }
                    
                 }
      }
   }
   def sonarSummaries() {
	withSonarQubeEnv('sonarcloud.io'){
	   if(fileExists("sonar-project.properties")) {
			sh '${SCANNER_HOME}/bin/sonar-scanner'
		} else {
			sh 'mvn clean verify sonar:sonar \
			    -Dsonar.login=1ff462f03228674e3a684569d716aad1aff286bb \
			    -Dsonar.host.url=https://sonarcloud.io \
			    -Dsonar.organization=riyapulusuganti \
			    -Dsonar.projectKey=riyapulusuganti_Demo'
		}
	}
	//timeout(time: 1, unit: 'MINUTES') {
		//waitForQualityGate abortPipeline: false
	//}
}
      
      
  



