def artifactname = "devops-snow-build-app.jar"
def repoName = "JenkinsDevOpsProject"
def pipelineName = "SunilPipelines/Sunil-Scripted-Pipeline-Sonar"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   environment {
	 SCANNER_HOME = tool 'sonarScanner'
	}  
  stages {
       stage('Build !@') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'
	     // snDevOpsChange(ignoreErrors:false)

           }
       }
       stage('Test') {
           steps {
              sonarSummaries()
              sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
      stage('Deploy Stage') {
                 steps {
                    
                    echo 'Deploying the change....'
		   // sonarSummaries()
                    snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           	    snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
		    snDevOpsChange changeRequestDetails: '{ "attributes": { "type": "Emergency", "standard_change_template": "62d10fa1c303101035ae3f52c1d3aec1"}}'
		    script{
                    changeNumber = snDevOpsGetChangeNumber()
                    echo '>> Deploy Stage -----'
                    sh "echo ${changeNumber}"
                  
                  }
                  
                  }
                    
                 }
      }
      def sonarSummaries() {
 //  withSonarQubeEnv('SonarCloud') {
    //   sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'
 //  }
  withSonarQubeEnv('sonarQube_local'){
      if(fileExists("sonar-project.properties")) {
      	sh '${SCANNER_HOME}/bin/sonar-scanner'
        } else {
            sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
   		  //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'
        }
  }
}


      
      
  



