def artifactname = "devops-snow-build-app.jar"
def repoName = "JenkinsDevOpsProject"
def pipelineName = "SunilPipelines/Sunil-Scripted-Pipeline-Sonar"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def changeRequestId = "testId"
def changeModel = "Emergency"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   environment {
	 SCANNER_HOME = tool 'sonarScanner'
	}  
  stages {
       stage('Build') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
       stage('Test') {
           steps {
              snDevOpsStep()
              sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
      stage('Deploy') {
                 steps {
		 
                   echo 'Deploying the change....'
		   // sonarSummaries()
		   //snDevOpsSecurityResult securityResultAttributes: "{'applicationName': 'App-DevOps-Azure-POC', 'buildVersion': 'jenkins-veracode_test-12'}", securityToolId: "8075de6f87e569100aaeea483cbb35c7" // toolId: "8075de6f87e569100aaeea483cbb35c7"
                   snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           	   snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
		  // snDevOpsChange(ignoreErrors:false)
		//   snDevOpsChange changeRequestDetails: '{ "attributes": { "chg_model": "007c4001c343101035ae3f52c1d3aeb2", "standard_change_template": "508e02ec47410200e90d87e8dee49058"}}'//standard
		   snDevOpsChange changeRequestDetails: '{ "attributes": { "type": "standard"}}'	
		    
		   
                 }
		 
      }
     
     }
 
}

//def sonarSummaries() {

   //withSonarQubeEnv('Sonar_Cloud') {       
   //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'     
   //}     withSonarQubeEnv('sonarQube_local'){
  // if(fileExists("sonar-project.properties")) {     
           //  sh '${SCANNER_HOME}/bin/sonar-scanner'        } 
	  //   else {         
          //   sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'   
	     
   //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'        
  //  }     
  // }
