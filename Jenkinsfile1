def artifactname = "devops-snow-build-app.jar"
def repoName = "JenkinsDevOpsProject"
def pipelineName = "SunilPipelines/Sunil-Scripted-Pipeline-Sonar"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops-snow-build-prasad_pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "devops-snow-build-prasad_pkg_${env.BUILD_NUMBER}"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
 
  stages {
       stage('Build') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
       stage('Test') {
           steps {
              
              sh 'mvn test'
	    
	      //sonarSummaries2()
              snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
              snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")

	      snDevOpsSecurityResult securityResultAttributes: "{'scanner': 'Veracode','applicationName': 'PetStoreAPI-Github', 'securityToolId' : '66b2cc8ec3a17110b31ff42c050131b3'}" //'securityToolId' : '05bf3d33c32f2110cd4cf92f0501311b'}"	
               
	}
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
      stage('Deploy') {
                 steps {
		script{
                snDevOpsChange changeRequestDetails: '{ "attributes": {"chg_model": "adffaa9e4370211072b7f6be5bb8f2ed"}}'
		stageName = "Deploy"
		changeRequestNumber = snDevOpsGetChangeNumber changeDetails: '{ "pipeline_name": "Prasad_Venkata", "build_number": "11", "stage_name": "Deploy", "branch_name": "master"}'
		echo "${changeRequestNumber}"
		snDevOpsUpdateChangeInfo(changeRequestDetails: """{"close_code": "successful", "state": "3", "close_notes": "Deployment to PROD was successful test 123", "short_description": "Test description in Get_Change Step by", "priority": "1", "justification": "test justification", "description": "test description",  "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "Update of change request through Update API"}""", changeRequestNumber: """${changeRequestNumber}""")
		}
                 }
      }


 }
 
}
def sonarSummaries2() {
	withSonarQubeEnv('sonarcloud.io'){
		if(fileExists("sonar-project.properties")) {
			sh '${SCANNER_HOME}/bin/sonar-scanner'
		} else {
			sh 'mvn clean verify sonar:sonar \
			    -Dsonar.login=1ff462f03228674e3a684569d716aad1aff286bb \
			    -Dsonar.host.url=https://sonarcloud.io \
			    -Dsonar.organization=riyapulusuganti \
			    -Dsonar.projectKey=riyapulusuganti_Demo'
		}
	}
	
}
def sonarSummaries() {

  // withSonarQubeEnv('SonarCloud') {
       //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'
     //  sh '${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=sunilyerubandi_DemoMavenProject -Dsonar.organization=sunilyerubandi -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=8f73ecadbe478e324214c741569315dddfa01ee5 -Dsonar.java.binaries=target/ -Dsonar.branch.name=master'
   
	//}
	
  // withSonarQubeEnv('sonarQube_local') {

       	sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
   		// sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'
	//}
	
} // end of def sonarsummaries
